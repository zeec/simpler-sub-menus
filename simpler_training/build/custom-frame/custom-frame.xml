<?xml version="1.0" encoding="utf-8"?>
<Template Access="NT Authority\Interactive,(localhost)" Description="Build Menu Present Template" xmlns="http://simplersystems.com/suite" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://simplersystems.com/suite ..\..\Template.xsd">
  <Xml>
    <Element Name="Template">
      <Attribute Name="Access" Value="AllUsers" />
      <Attribute Name="Description" />
      <Attribute Name="xmlns" Value="http://simplersystems.com/suite" />
      <Attribute Name="xmlns:xsi" Value="http://www.w3.org/2001/XMLSchema-instance" />
      <Attribute Name="xsi:schemaLocation" Value="http://simplersystems.com/suite Template.xsd" />
      <Element Name="Present">
        <Element Name="Script.Url">
          <Attribute Name="Identifier" Value="DirectoryUrl" />
          <Attribute Name="BaseUrl" Value="/menu/_directory/select.xml"/>
          <Element Name="Parameter">
            <Attribute Name="Name" Value="Path"/>
          </Element>
          <Element Name="Parameter">
            <Attribute Name="Name" Value="Select"/>
            <Attribute Name="Value" Value="FileName"/>
          </Element>
        </Element>
        <Element Name="Script">
          <CDATA>

            Menus {Url.Execute(Url.Build(DirectoryUrl,'Path','*\menu'))}
            MenuTabs {List.Parse(String.Replace(%Menus,'.xml',''))}
            TabName {List.ItemAt(MenuTabs,TabIndex)}
            TabPath {'/menu/', TabName}

            SubMenus {Url.Execute(Url.Build(DirectoryUrl,'Path',{'*\menu\',List.ItemAt(MenuTabs,TabIndex)}as String))}
            SubMenu0 {String.Replace(List.ItemAt(SubMenus,0),'.xml','.html')}
            SubMenu1 {String.Replace(List.ItemAt(SubMenus,1),'.xml','.html')}
            SubMenu2 {String.Replace(List.ItemAt(SubMenus,2),'.xml','.html')}
            SubMenu3 {String.Replace(List.ItemAt(SubMenus,3),'.xml','.html')}
            SubMenu4 {String.Replace(List.ItemAt(SubMenus,4),'.xml','.html')}

            SubMenuPath0 {Url.AddRootPath(TabPath, '/', SubMenu0)}
            SubMenuPath1 {Url.AddRootPath(TabPath, '/', SubMenu1)}
            SubMenuPath2 {Url.AddRootPath(TabPath, '/', SubMenu2)}
            SubMenuPath3 {Url.AddRootPath(TabPath, '/', SubMenu3)}
            SubMenuPath4 {Url.AddRootPath(TabPath, '/', SubMenu4)}

            SubMenuTitle0 {String.ProperCase(String.FormatIdentifier(String.Replace(SubMenu0,'.html','')))}
            SubMenuTitle1 {String.ProperCase(String.FormatIdentifier(String.Replace(SubMenu1,'.html','')))}
            SubMenuTitle2 {String.ProperCase(String.FormatIdentifier(String.Replace(SubMenu2,'.html','')))}
            SubMenuTitle3 {String.ProperCase(String.FormatIdentifier(String.Replace(SubMenu3,'.html','')))}
            SubMenuTitle4 {String.ProperCase(String.FormatIdentifier(String.Replace(SubMenu4,'.html','')))}
            SubMenuTitles {SubMenuTitle0, SubMenuTitle1, SubMenuTitle2, SubMenuTitle3, SubMenuTitle4}

            SubMenuDisplay0 {'display:none;opacity:0;' when SubMenu0=null}
            SubMenuDisplay1 {'display:none;opacity:0;' when SubMenu1=null}
            SubMenuDisplay2 {'display:none;opacity:0;' when SubMenu2=null}
            SubMenuDisplay3 {'display:none;opacity:0;' when SubMenu3=null}
            SubMenuDisplay4 {'display:none;opacity:0;' when SubMenu4=null}

            SubMenuActive0 {'color:#46a448!important;' when Title=SubMenuTitle0}
            SubMenuActive1 {'color:#46a448!important;' when Title=SubMenuTitle1}
            SubMenuActive2 {'color:#46a448!important;' when Title=SubMenuTitle2}
            SubMenuActive3 {'color:#46a448!important;' when Title=SubMenuTitle3}
            SubMenuActive4 {'color:#46a448!important;' when Title=SubMenuTitle4}

            CurrentMenuItem {'current-menu-item' when TabName = Title or List.Contains(SubMenuTitles,Title)}

            ListScript {
            '&lt;li  class=&quot;', CurrentMenuItem, '&quot;>
            &lt;a href=&quot;', Url.AddRootPath(TabPath), '.html', '&quot;>', String.ProperCase(String.FormatIdentifier(TabName)), '&lt;/a>
            &lt;ul>
            &lt;li class=&quot;', CurrentMenuItem, '&quot; style=&quot;', SubMenuDisplay0, '&quot;>
            &lt;a href=&quot;', SubMenuPath0, '&quot; style=&quot;', SubMenuActive0, '&quot;>', SubMenuTitle0, '&lt;/a>
            &lt;/li>
            &lt;li class=&quot;', CurrentMenuItem, '&quot; style=&quot;', SubMenuDisplay1, '&quot;>
            &lt;a href=&quot;', SubMenuPath1, '&quot; style=&quot;', SubMenuActive1, '&quot;>', SubMenuTitle1, '&lt;/a>
            &lt;/li>
            &lt;li class=&quot;', CurrentMenuItem, '&quot; style=&quot;', SubMenuDisplay2, '&quot;>
            &lt;a href=&quot;', SubMenuPath2, '&quot; style=&quot;', SubMenuActive2, '&quot;>', SubMenuTitle2, '&lt;/a>
            &lt;/li>
            &lt;li class=&quot;', CurrentMenuItem, '&quot; style=&quot;', SubMenuDisplay3, '&quot;>
            &lt;a href=&quot;', SubMenuPath3, '&quot; style=&quot;', SubMenuActive3, '&quot;>', SubMenuTitle3, '&lt;/a>
            &lt;/li>
            &lt;li class=&quot;', CurrentMenuItem, '&quot; style=&quot;', SubMenuDisplay4, '&quot;>
            &lt;a href=&quot;', SubMenuPath4, '&quot; style=&quot;', SubMenuActive4, '&quot;>', SubMenuTitle4, '&lt;/a>
            &lt;/li>
            &lt;/ul>
            &lt;/li>'
            }
          </CDATA>
        </Element>
        <Element Name="Html">
          <Element Name="Script.Url">
            <Attribute Name="Identifier" Value="FrameUrl" />
            <Attribute Name="BaseUrl" Value="{'{url.GetQueryString(Url.This)}'}"/>
            <Element Name="Parameter">
              <Attribute Name="Name" Value="Title"/>
              <Attribute Name="Value" Value="{{Select.GetSchemaColumnAttribute(SelectUrl, ''Title'')}'}"/>
            </Element>
            <Element Name="Parameter">
              <Attribute Name="Name" Value="TableUrl"/>
            </Element>
            <Element Name="Parameter">
              <Attribute Name="Name" Value="Url.This"/>
            </Element>
          </Element>
          <CDATA>
            <![CDATA[
            
<head>

<style type="text/css">
  .dock-right, .anchor-custom {
	position: absolute;
	right: 0;	
}
.anchor-custom {
	font-size: 85%;
	line-height: 18px;
	padding-right: 20em;
}
.anchor-custom a {
	color:#000;
text-decoration: none;
}
.anchor-custom a:hover {
	text-decoration: underline;
}

.anchor-right {
	position: absolute;
	right: 0;
	
}

 div.customheader {
    background: ~{Settings.FrameColor}~; /* Old browsers */
  background: -moz-linear-gradient(left,  ~{Settings.FrameColor}~ 0%, ~{Settings.FrameColor}~ 80%, #fff 90%, #fff 88%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, right top, color-stop(0%,~{Settings.FrameColor}~), color-stop(80%,~{Settings.FrameColor}~), color-stop(90%,#fff), color-stop(88%,#ffffff)); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(left,  ~{Settings.FrameColor}~ 0%,~{Settings.FrameColor}~ 80%,fff 90%,#ffffff 88%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(left,  ~{Settings.FrameColor}~ 0%,~{Settings.FrameColor}~ 80%,#fff 90%,#ffffff 88%); /* Opera 11.10+ */
  background: -ms-linear-gradient(left,  ~{Settings.FrameColor}~ 0%,~{Settings.FrameColor}~ 80%,#fff 90%,#ffffff 88%); /* IE10+ */
  background: linear-gradient(left,  ~{Settings.FrameColor}~ 0%,~{Settings.FrameColor}~ 80%,#fff 90%,#ffffff 88%); /* W3C */

filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='~{Settings.FrameColor}~', endColorstr='#ffffff',GradientType=1 );
        }
 div.customheader h1 {
        font-weight:Bold;
        font-size:115%; 
        color: ~{Settings.HeadingColor}~;
        white-space:nowrap;
        font-family: Calibri,Candara,Segoe,"Segoe UI",Optima,Arial,sans-serif;
        }
 div.customheader h2 {
        font-weight:Bold;
        font-size:100%;
        color: ~{Settings.HeadingColor}~;
        white-space:nowrap;
        /*font-family: Calibri,Candara,Segoe,"Segoe UI",Optima,Arial,sans-serif;*/
        }
  #tabs {
     
             font-family: Calibri,Candara,Segoe,"Segoe UI",Optima,Arial,sans-serif;
font-size: 11pt; 
      
      }

<!--Submenu-->
#primary_nav_wrap
{
	
}

#primary_nav_wrap ul
{
	list-style:none;
	position:relative;
	float:left;
	margin:0;
	height:20px;	
  
}

#primary_nav_wrap ul a
{
	display:block;
	color:#333;
	text-decoration:none;
	font-weight:700;
	font-size:12px;
	line-height:20px;
  font-family: Calibri,Candara,Segoe,"Segoe UI",Optima,Arial,sans-serif;
  padding:0px 5px 0px 5px;
  margin-right:1.5px;
  border-top:1px solid #ccc;
  border-left:1px solid #ccc;
  border-right:1px solid #ccc;
  border-bottom:1px solid #eee;
  border-radius:5px 5px 0 0;

}

#primary_nav_wrap ul ul li a
{
	display:block;
	color:#333;
	text-decoration:none;
	font-weight:700;
	font-size:12px;
	line-height:20px;
	padding:0px 10px 0px 10px;
  font-family: Calibri,Candara,Segoe,"Segoe UI",Optima,Arial,sans-serif; 
}
#primary_nav_wrap ul li
{
	position:relative;
	float:left;
	padding:0;

}

#primary_nav_wrap ul li.current-menu-item
{
        border-bottom:1px solid #eee;
        text-decoration: none; 

}

#primary_nav_wrap ul li.current-menu-item a
{
		background-color:#eee;     
    font-weight:bold;
    color: #46a448;
    text-decoration: none; 
}

#primary_nav_wrap ul li:hover
{
	background:transparent;
  
}

#primary_nav_wrap ul li a:hover
{
	background:#ccc;
  color:#46a448!important;
}


#primary_nav_wrap ul ul li a
{
	background:#fff;
  color:#000!important;

}


#primary_nav_wrap ul ul
{
	display:none;
	position:absolute;
	top:100%;
	left:0;
	background:#ccc;
	padding:0;		
  
}

#primary_nav_wrap ul ul li
{
	float:none;
	width:150px;
	z-index:99;




}

#primary_nav_wrap ul ul a
{
	line-height:100%;
	padding:5px 15px;
  border:1px solid #ccc;
  border-radius:0;
  
}


#primary_nav_wrap ul li:hover > ul
{
	display:block;
	border:0;
}


</style>
</head>

  <!--Header banner-->
<div class="customheader" >
     <table width="100%" >
     <tr>
         <td width="10%">
          <a href="/home.html" style="position: relative; left: 5"><img src="~{Url.AddRootPath({Settings.LogoUrl})}~" alt="LOGO" width="~{Settings.LogoWidth}~" height="~{Settings.LogoHeight}~" style="padding-right:5px;"></a>
         </td>
         <td>
         <table>
         <tr>
		   <td width="10%"><h2>~{Settings.ClientName}~ - </h2></td>

          <td width="20%">
              <h2>&nbsp; ~{Settings.ApplicationTitle}~</h2>
           </td>
           <td>&nbsp;</td>
           <td width="60%">
            <h1 style="">~{Title}~</h1>
          </td>
          </tr>
           <tr>
        
          <td>&nbsp;</td>
        
         </tr>
         </table>
		
           
            
            ]]>
          </CDATA>
  
    
        </Element>
        <Element Name="Html">
          <Attribute Name="AuthenticatedUsers"/>
          <Attribute Name="{'{Settings.TabularMenu=''Y''}'}"/>
          <CDATA>
            <![CDATA[
             <nav id="primary_nav_wrap">
              <ul>
                <li class="~{'current-menu-item' when String.Contains(TableUrl,'/administer') or String.Contains(SearchUrl,'/administer') or (Title = 'Welcome' or Title = 'Home')}~">
                              <a href="~{Url.AddRootPath('/home.html')}~">&nbsp;Home&nbsp;</a>
                </li>
        
            ]]>
          </CDATA>
        </Element>
        <Element Name="Html">
          <Attribute Name="AuthenticatedUsers"/>
          <Attribute Name="{'{Settings.TabularMenu=''Y'' and List.ItemAt(MenuTabs,0)!=null}'}"/>
          <Element Name="Script">
            <CDATA>
              TabIndex {'0'}
            </CDATA>
          </Element>
          <CDATA>
            <![CDATA[
             ~{'~{ListScript}~'}~

        
            ]]>
          </CDATA>
        </Element>
      </Element>
    </Element>
  </Xml>
</Template>
  